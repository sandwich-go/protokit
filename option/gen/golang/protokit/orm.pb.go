// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.14.0
// source: protokit/orm.proto

package protokit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BlobSize blob 的大小
type BlobSize int32

const (
	BlobSize_BLOB_SIZE_BLOB   BlobSize = 0 // 默认的，blob，65K
	BlobSize_BLOB_SIZE_LONG   BlobSize = 1 // long blob，4G
	BlobSize_BLOB_SIZE_MEDIUM BlobSize = 2 // medium blob，16M
	BlobSize_BLOB_SIZE_TINY   BlobSize = 3 // tiny blob, 255b
)

// Enum value maps for BlobSize.
var (
	BlobSize_name = map[int32]string{
		0: "BLOB_SIZE_BLOB",
		1: "BLOB_SIZE_LONG",
		2: "BLOB_SIZE_MEDIUM",
		3: "BLOB_SIZE_TINY",
	}
	BlobSize_value = map[string]int32{
		"BLOB_SIZE_BLOB":   0,
		"BLOB_SIZE_LONG":   1,
		"BLOB_SIZE_MEDIUM": 2,
		"BLOB_SIZE_TINY":   3,
	}
)

func (x BlobSize) Enum() *BlobSize {
	p := new(BlobSize)
	*p = x
	return p
}

func (x BlobSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlobSize) Descriptor() protoreflect.EnumDescriptor {
	return file_protokit_orm_proto_enumTypes[0].Descriptor()
}

func (BlobSize) Type() protoreflect.EnumType {
	return &file_protokit_orm_proto_enumTypes[0]
}

func (x BlobSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlobSize.Descriptor instead.
func (BlobSize) EnumDescriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{0}
}

// BlobCodec blob 序列化/反序列化方式
type BlobCodec int32

const (
	BlobCodec_BLOB_CODEC_OPT         BlobCodec = 0 // 优先使用 proto 方式进行 Marshal/Unmarshal，若数据非 proto.Message，则使用 msgpack 格式，推荐使用
	BlobCodec_BLOB_CODEC_GOB         BlobCodec = 1 // Golang 原生 gob 方式进行 Marshal/Unmarshal
	BlobCodec_BLOB_CODEC_MSG_PACK    BlobCodec = 2 // msgpack 格式进行 Marshal/Unmarshal
	BlobCodec_BLOB_CODEC_NATIVE_JSON BlobCodec = 3 // 使用原生 JSON 进行 Marshal/Unmarshal，序列化后的内容可视化，但如果数据中包含特殊的二进制数据，Marshal 后数据可能会丢失，不推荐使用
)

// Enum value maps for BlobCodec.
var (
	BlobCodec_name = map[int32]string{
		0: "BLOB_CODEC_OPT",
		1: "BLOB_CODEC_GOB",
		2: "BLOB_CODEC_MSG_PACK",
		3: "BLOB_CODEC_NATIVE_JSON",
	}
	BlobCodec_value = map[string]int32{
		"BLOB_CODEC_OPT":         0,
		"BLOB_CODEC_GOB":         1,
		"BLOB_CODEC_MSG_PACK":    2,
		"BLOB_CODEC_NATIVE_JSON": 3,
	}
)

func (x BlobCodec) Enum() *BlobCodec {
	p := new(BlobCodec)
	*p = x
	return p
}

func (x BlobCodec) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlobCodec) Descriptor() protoreflect.EnumDescriptor {
	return file_protokit_orm_proto_enumTypes[1].Descriptor()
}

func (BlobCodec) Type() protoreflect.EnumType {
	return &file_protokit_orm_proto_enumTypes[1]
}

func (x BlobCodec) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlobCodec.Descriptor instead.
func (BlobCodec) EnumDescriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{1}
}

// TextSize text 的大小
type TextSize int32

const (
	TextSize_TEXT_SIZE_NONE   TextSize = 0 // 非 text
	TextSize_TEXT_SIZE_TEXT   TextSize = 1 // text，65535个字符
	TextSize_TEXT_SIZE_LONG   TextSize = 2 // long text，4G个字符
	TextSize_TEXT_SIZE_MEDIUM TextSize = 3 // medium text，16M个字符
	TextSize_TEXT_SIZE_TINY   TextSize = 4 // tiny blob, 255个字符
)

// Enum value maps for TextSize.
var (
	TextSize_name = map[int32]string{
		0: "TEXT_SIZE_NONE",
		1: "TEXT_SIZE_TEXT",
		2: "TEXT_SIZE_LONG",
		3: "TEXT_SIZE_MEDIUM",
		4: "TEXT_SIZE_TINY",
	}
	TextSize_value = map[string]int32{
		"TEXT_SIZE_NONE":   0,
		"TEXT_SIZE_TEXT":   1,
		"TEXT_SIZE_LONG":   2,
		"TEXT_SIZE_MEDIUM": 3,
		"TEXT_SIZE_TINY":   4,
	}
)

func (x TextSize) Enum() *TextSize {
	p := new(TextSize)
	*p = x
	return p
}

func (x TextSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TextSize) Descriptor() protoreflect.EnumDescriptor {
	return file_protokit_orm_proto_enumTypes[2].Descriptor()
}

func (TextSize) Type() protoreflect.EnumType {
	return &file_protokit_orm_proto_enumTypes[2]
}

func (x TextSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TextSize.Descriptor instead.
func (TextSize) EnumDescriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{2}
}

// IntSize int 的大小
type IntSize int32

const (
	IntSize_INT_SIZE_INT    IntSize = 0 // int
	IntSize_INT_SIZE_BIG    IntSize = 1 // big int
	IntSize_INT_SIZE_MEDIUM IntSize = 2 // medium int
	IntSize_INT_SIZE_SMALL  IntSize = 3 // small int
	IntSize_INT_SIZE_TINY   IntSize = 4 // tiny int
)

// Enum value maps for IntSize.
var (
	IntSize_name = map[int32]string{
		0: "INT_SIZE_INT",
		1: "INT_SIZE_BIG",
		2: "INT_SIZE_MEDIUM",
		3: "INT_SIZE_SMALL",
		4: "INT_SIZE_TINY",
	}
	IntSize_value = map[string]int32{
		"INT_SIZE_INT":    0,
		"INT_SIZE_BIG":    1,
		"INT_SIZE_MEDIUM": 2,
		"INT_SIZE_SMALL":  3,
		"INT_SIZE_TINY":   4,
	}
)

func (x IntSize) Enum() *IntSize {
	p := new(IntSize)
	*p = x
	return p
}

func (x IntSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntSize) Descriptor() protoreflect.EnumDescriptor {
	return file_protokit_orm_proto_enumTypes[3].Descriptor()
}

func (IntSize) Type() protoreflect.EnumType {
	return &file_protokit_orm_proto_enumTypes[3]
}

func (x IntSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntSize.Descriptor instead.
func (IntSize) EnumDescriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{3}
}

// Compress 压缩方式
type Compress int32

const (
	Compress_COMPRESS_NONE   Compress = 0 // 无压缩
	Compress_COMPRESS_GZIP   Compress = 1 // gzip 压缩
	Compress_COMPRESS_SNAPPY Compress = 2 // snappy 压缩
)

// Enum value maps for Compress.
var (
	Compress_name = map[int32]string{
		0: "COMPRESS_NONE",
		1: "COMPRESS_GZIP",
		2: "COMPRESS_SNAPPY",
	}
	Compress_value = map[string]int32{
		"COMPRESS_NONE":   0,
		"COMPRESS_GZIP":   1,
		"COMPRESS_SNAPPY": 2,
	}
)

func (x Compress) Enum() *Compress {
	p := new(Compress)
	*p = x
	return p
}

func (x Compress) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Compress) Descriptor() protoreflect.EnumDescriptor {
	return file_protokit_orm_proto_enumTypes[4].Descriptor()
}

func (Compress) Type() protoreflect.EnumType {
	return &file_protokit_orm_proto_enumTypes[4]
}

func (x Compress) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Compress.Descriptor instead.
func (Compress) EnumDescriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{4}
}

type OrmEnumOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrmEnumOptions) Reset() {
	*x = OrmEnumOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrmEnumOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrmEnumOptions) ProtoMessage() {}

func (x *OrmEnumOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrmEnumOptions.ProtoReflect.Descriptor instead.
func (*OrmEnumOptions) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{0}
}

type EnumValueOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EnumValueOptions) Reset() {
	*x = EnumValueOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumValueOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValueOptions) ProtoMessage() {}

func (x *EnumValueOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValueOptions.ProtoReflect.Descriptor instead.
func (*EnumValueOptions) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{1}
}

func (x *EnumValueOptions) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误的 format
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 是否是非逻辑错误，逻辑错误不会体现在监控上，对于 queue 模式，不会中止后续 message 处理
	NoLogic bool `protobuf:"varint,2,opt,name=no_logic,json=noLogic,proto3" json:"no_logic,omitempty"`
	// error skip
	Skip int32 `protobuf:"varint,3,opt,name=skip,proto3" json:"skip,omitempty"`
	// 是否是超时错误
	Timeout bool `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// 如果定义，则使用该值为 error code，否则使用 enum value
	Code int32 `protobuf:"varint,5,opt,name=code,proto3" json:"code,omitempty"`
	// 是否带堆栈
	Stack bool `protobuf:"varint,6,opt,name=stack,proto3" json:"stack,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{2}
}

func (x *Error) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Error) GetNoLogic() bool {
	if x != nil {
		return x.NoLogic
	}
	return false
}

func (x *Error) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *Error) GetTimeout() bool {
	if x != nil {
		return x.Timeout
	}
	return false
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetStack() bool {
	if x != nil {
		return x.Stack
	}
	return false
}

type OrmMessageOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否生成数据库 message，对应原注释中的 Entry 标签
	Model bool `protobuf:"varint,1,opt,name=model,proto3" json:"model,omitempty"`
	// 不走 dataserver 的缓存，对应原注释中的 NoCache 标签
	NoCache bool `protobuf:"varint,2,opt,name=no_cache,json=noCache,proto3" json:"no_cache,omitempty"`
	// 字符集，对应原注释中的 Charset 标签
	Charset string `protobuf:"bytes,3,opt,name=charset,proto3" json:"charset,omitempty"`
	// 表前缀，对应原注释中的 Prefix 标签
	Prefix string `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// 是否生成属性同步 message，同时也会生成 数据库 message
	Bean *Bean `protobuf:"bytes,5,opt,name=bean,proto3" json:"bean,omitempty"`
	// 是否是全局 hint，对应原注释中的 GlobalHint/Hint 标签
	Hint *Hint `protobuf:"bytes,6,opt,name=hint,proto3" json:"hint,omitempty"`
	// 比较，对应原注释中的 Charset 标签
	Collate string `protobuf:"bytes,7,opt,name=collate,proto3" json:"collate,omitempty"`
	// 依赖锁
	DependLock string `protobuf:"bytes,8,opt,name=depend_lock,json=dependLock,proto3" json:"depend_lock,omitempty"`
	// 锁
	Lock *Lock `protobuf:"bytes,9,opt,name=lock,proto3" json:"lock,omitempty"`
	// 不记录日志
	NoLog bool `protobuf:"varint,28,opt,name=no_log,json=noLog,proto3" json:"no_log,omitempty"`
	// 报警静默，例如字段长度超长，不会报警
	AlterSilent bool `protobuf:"varint,29,opt,name=alter_silent,json=alterSilent,proto3" json:"alter_silent,omitempty"`
}

func (x *OrmMessageOptions) Reset() {
	*x = OrmMessageOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrmMessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrmMessageOptions) ProtoMessage() {}

func (x *OrmMessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrmMessageOptions.ProtoReflect.Descriptor instead.
func (*OrmMessageOptions) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{3}
}

func (x *OrmMessageOptions) GetModel() bool {
	if x != nil {
		return x.Model
	}
	return false
}

func (x *OrmMessageOptions) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

func (x *OrmMessageOptions) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

func (x *OrmMessageOptions) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *OrmMessageOptions) GetBean() *Bean {
	if x != nil {
		return x.Bean
	}
	return nil
}

func (x *OrmMessageOptions) GetHint() *Hint {
	if x != nil {
		return x.Hint
	}
	return nil
}

func (x *OrmMessageOptions) GetCollate() string {
	if x != nil {
		return x.Collate
	}
	return ""
}

func (x *OrmMessageOptions) GetDependLock() string {
	if x != nil {
		return x.DependLock
	}
	return ""
}

func (x *OrmMessageOptions) GetLock() *Lock {
	if x != nil {
		return x.Lock
	}
	return nil
}

func (x *OrmMessageOptions) GetNoLog() bool {
	if x != nil {
		return x.NoLog
	}
	return false
}

func (x *OrmMessageOptions) GetAlterSilent() bool {
	if x != nil {
		return x.AlterSilent
	}
	return false
}

type OrmFieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否是 Blob，对应原注释中的 Blob 标签
	Blob *Blob `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	// 是否是 Text，对应原注释中的 Text 标签
	Text TextSize `protobuf:"varint,2,opt,name=text,proto3,enum=protokit.TextSize" json:"text,omitempty"`
	// 唯一键，对应原注释中的 Unique 标签
	Unique *Index `protobuf:"bytes,3,opt,name=unique,proto3" json:"unique,omitempty"`
	// 索引，对应原注释中的 Index 标签
	Index *Index `protobuf:"bytes,4,opt,name=index,proto3" json:"index,omitempty"`
	// 聚合索引，对应原注释中的 Aggregate 标签
	Aggregate *Index `protobuf:"bytes,5,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
	// 主键，对应原注释中的 Id 标签
	PrimaryKey bool `protobuf:"varint,6,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	// hint，对应原注释中的 Hint 标签
	Hint *Hint `protobuf:"bytes,7,opt,name=hint,proto3" json:"hint,omitempty"`
	// shard，cache 中分配的桶
	Shard *Hint `protobuf:"bytes,8,opt,name=shard,proto3" json:"shard,omitempty"`
	// 标示某个属性是主键并且为自增，对应原注释中的 AutoIncrement 标签
	AutoIncrement bool `protobuf:"varint,9,opt,name=auto_increment,json=autoIncrement,proto3" json:"auto_increment,omitempty"`
	// 大小，对应原注释中的 Size 标签
	Size int32 `protobuf:"varint,10,opt,name=size,proto3" json:"size,omitempty"`
	// 默认值，对应原注释中的 Default 标签
	Default string `protobuf:"bytes,11,opt,name=default,proto3" json:"default,omitempty"`
	// int 类型，对应原注释中的 Int 标签
	Int *Int `protobuf:"bytes,12,opt,name=int,proto3" json:"int,omitempty"`
	// decimal 类型，对应原注释中的 Decimal 标签
	Decimal *Decimal `protobuf:"bytes,13,opt,name=decimal,proto3" json:"decimal,omitempty"`
	// 是否是 unsigned，对应原注释中的 Unsigned 标签
	Unsigned bool `protobuf:"varint,14,opt,name=unsigned,proto3" json:"unsigned,omitempty"`
	// 注释，对应原注释中的 Comment 标签
	Comment string `protobuf:"bytes,15,opt,name=comment,proto3" json:"comment,omitempty"`
	// 压缩格式，对应原注释中的 Compress 标签
	Compress Compress `protobuf:"varint,16,opt,name=compress,proto3,enum=protokit.Compress" json:"compress,omitempty"`
	// sequence 序列，对应原注释中的 SIID 标签
	Sequence *Sequence `protobuf:"bytes,17,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// 是否是 search 属性，对应原注释中的 Search 标签
	Search bool `protobuf:"varint,18,opt,name=search,proto3" json:"search,omitempty"`
	// read_only 是否只读
	ReadOnly bool `protobuf:"varint,19,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	// 不同步给 client
	NoSyncClient bool `protobuf:"varint,20,opt,name=no_sync_client,json=noSyncClient,proto3" json:"no_sync_client,omitempty"`
	// 不同步给 db
	NoSyncDb bool `protobuf:"varint,21,opt,name=no_sync_db,json=noSyncDb,proto3" json:"no_sync_db,omitempty"`
	// 不同步
	NoSync bool `protobuf:"varint,22,opt,name=no_sync,json=noSync,proto3" json:"no_sync,omitempty"`
	// 依赖锁属性编号
	DependLockNum int32 `protobuf:"varint,23,opt,name=depend_lock_num,json=dependLockNum,proto3" json:"depend_lock_num,omitempty"`
	// 标记属性是否为版本属性，版本属性必须是 uint64 类型，例如 uint64、fixed64
	Version bool `protobuf:"varint,24,opt,name=version,proto3" json:"version,omitempty"`
	// 意向锁的根部字段，之后的字段都是锁的字段
	IntentLockRoot bool `protobuf:"varint,25,opt,name=intent_lock_root,json=intentLockRoot,proto3" json:"intent_lock_root,omitempty"`
	// 别名
	GoType *GoType `protobuf:"bytes,26,opt,name=go_type,json=goType,proto3" json:"go_type,omitempty"`
	// bean 的 动态属性
	Dynamic bool `protobuf:"varint,27,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	// 不记录日志
	NoLog bool `protobuf:"varint,28,opt,name=no_log,json=noLog,proto3" json:"no_log,omitempty"`
	// 报警静默，例如字段长度超长，不会报警
	AlterSilent bool `protobuf:"varint,29,opt,name=alter_silent,json=alterSilent,proto3" json:"alter_silent,omitempty"`
	// 为固定字符串类型
	Char bool `protobuf:"varint,30,opt,name=char,proto3" json:"char,omitempty"`
}

func (x *OrmFieldOptions) Reset() {
	*x = OrmFieldOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrmFieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrmFieldOptions) ProtoMessage() {}

func (x *OrmFieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrmFieldOptions.ProtoReflect.Descriptor instead.
func (*OrmFieldOptions) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{4}
}

func (x *OrmFieldOptions) GetBlob() *Blob {
	if x != nil {
		return x.Blob
	}
	return nil
}

func (x *OrmFieldOptions) GetText() TextSize {
	if x != nil {
		return x.Text
	}
	return TextSize_TEXT_SIZE_NONE
}

func (x *OrmFieldOptions) GetUnique() *Index {
	if x != nil {
		return x.Unique
	}
	return nil
}

func (x *OrmFieldOptions) GetIndex() *Index {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *OrmFieldOptions) GetAggregate() *Index {
	if x != nil {
		return x.Aggregate
	}
	return nil
}

func (x *OrmFieldOptions) GetPrimaryKey() bool {
	if x != nil {
		return x.PrimaryKey
	}
	return false
}

func (x *OrmFieldOptions) GetHint() *Hint {
	if x != nil {
		return x.Hint
	}
	return nil
}

func (x *OrmFieldOptions) GetShard() *Hint {
	if x != nil {
		return x.Shard
	}
	return nil
}

func (x *OrmFieldOptions) GetAutoIncrement() bool {
	if x != nil {
		return x.AutoIncrement
	}
	return false
}

func (x *OrmFieldOptions) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *OrmFieldOptions) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *OrmFieldOptions) GetInt() *Int {
	if x != nil {
		return x.Int
	}
	return nil
}

func (x *OrmFieldOptions) GetDecimal() *Decimal {
	if x != nil {
		return x.Decimal
	}
	return nil
}

func (x *OrmFieldOptions) GetUnsigned() bool {
	if x != nil {
		return x.Unsigned
	}
	return false
}

func (x *OrmFieldOptions) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *OrmFieldOptions) GetCompress() Compress {
	if x != nil {
		return x.Compress
	}
	return Compress_COMPRESS_NONE
}

func (x *OrmFieldOptions) GetSequence() *Sequence {
	if x != nil {
		return x.Sequence
	}
	return nil
}

func (x *OrmFieldOptions) GetSearch() bool {
	if x != nil {
		return x.Search
	}
	return false
}

func (x *OrmFieldOptions) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *OrmFieldOptions) GetNoSyncClient() bool {
	if x != nil {
		return x.NoSyncClient
	}
	return false
}

func (x *OrmFieldOptions) GetNoSyncDb() bool {
	if x != nil {
		return x.NoSyncDb
	}
	return false
}

func (x *OrmFieldOptions) GetNoSync() bool {
	if x != nil {
		return x.NoSync
	}
	return false
}

func (x *OrmFieldOptions) GetDependLockNum() int32 {
	if x != nil {
		return x.DependLockNum
	}
	return 0
}

func (x *OrmFieldOptions) GetVersion() bool {
	if x != nil {
		return x.Version
	}
	return false
}

func (x *OrmFieldOptions) GetIntentLockRoot() bool {
	if x != nil {
		return x.IntentLockRoot
	}
	return false
}

func (x *OrmFieldOptions) GetGoType() *GoType {
	if x != nil {
		return x.GoType
	}
	return nil
}

func (x *OrmFieldOptions) GetDynamic() bool {
	if x != nil {
		return x.Dynamic
	}
	return false
}

func (x *OrmFieldOptions) GetNoLog() bool {
	if x != nil {
		return x.NoLog
	}
	return false
}

func (x *OrmFieldOptions) GetAlterSilent() bool {
	if x != nil {
		return x.AlterSilent
	}
	return false
}

func (x *OrmFieldOptions) GetChar() bool {
	if x != nil {
		return x.Char
	}
	return false
}

// Bean bean 相关
type Bean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否是一个 job
	Job bool `protobuf:"varint,1,opt,name=job,proto3" json:"job,omitempty"`
	// bean 的 动态属性
	DynamicGeneric *GoType `protobuf:"bytes,2,opt,name=dynamic_generic,json=dynamicGeneric,proto3" json:"dynamic_generic,omitempty"`
}

func (x *Bean) Reset() {
	*x = Bean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bean) ProtoMessage() {}

func (x *Bean) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bean.ProtoReflect.Descriptor instead.
func (*Bean) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{5}
}

func (x *Bean) GetJob() bool {
	if x != nil {
		return x.Job
	}
	return false
}

func (x *Bean) GetDynamicGeneric() *GoType {
	if x != nil {
		return x.DynamicGeneric
	}
	return nil
}

// GoType 别名相关
type GoType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageAlias string `protobuf:"bytes,1,opt,name=package_alias,json=packageAlias,proto3" json:"package_alias,omitempty"`
	PackagePath  string `protobuf:"bytes,2,opt,name=package_path,json=packagePath,proto3" json:"package_path,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GoType) Reset() {
	*x = GoType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoType) ProtoMessage() {}

func (x *GoType) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoType.ProtoReflect.Descriptor instead.
func (*GoType) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{6}
}

func (x *GoType) GetPackageAlias() string {
	if x != nil {
		return x.PackageAlias
	}
	return ""
}

func (x *GoType) GetPackagePath() string {
	if x != nil {
		return x.PackagePath
	}
	return ""
}

func (x *GoType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Lock 锁相关
type Lock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 锁的名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 锁的优先级
	Priority int32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	// 是否需要生成意向锁
	Intent bool `protobuf:"varint,3,opt,name=intent,proto3" json:"intent,omitempty"`
}

func (x *Lock) Reset() {
	*x = Lock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lock) ProtoMessage() {}

func (x *Lock) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lock.ProtoReflect.Descriptor instead.
func (*Lock) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{7}
}

func (x *Lock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lock) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Lock) GetIntent() bool {
	if x != nil {
		return x.Intent
	}
	return false
}

// Sequence 序列相关
type Sequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 域
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// 起始偏移量
	OffsetWhenCreateDomain int64 `protobuf:"varint,2,opt,name=offset_when_create_domain,json=offsetWhenCreateDomain,proto3" json:"offset_when_create_domain,omitempty"`
}

func (x *Sequence) Reset() {
	*x = Sequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sequence) ProtoMessage() {}

func (x *Sequence) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sequence.ProtoReflect.Descriptor instead.
func (*Sequence) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{8}
}

func (x *Sequence) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Sequence) GetOffsetWhenCreateDomain() int64 {
	if x != nil {
		return x.OffsetWhenCreateDomain
	}
	return 0
}

type Blob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlobSize  BlobSize  `protobuf:"varint,1,opt,name=blob_size,json=blobSize,proto3,enum=protokit.BlobSize" json:"blob_size,omitempty"`     // blob 的大小
	BlobCodec BlobCodec `protobuf:"varint,2,opt,name=blob_codec,json=blobCodec,proto3,enum=protokit.BlobCodec" json:"blob_codec,omitempty"` // blob 数据的序列化/反序列化方式
}

func (x *Blob) Reset() {
	*x = Blob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blob) ProtoMessage() {}

func (x *Blob) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blob.ProtoReflect.Descriptor instead.
func (*Blob) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{9}
}

func (x *Blob) GetBlobSize() BlobSize {
	if x != nil {
		return x.BlobSize
	}
	return BlobSize_BLOB_SIZE_BLOB
}

func (x *Blob) GetBlobCodec() BlobCodec {
	if x != nil {
		return x.BlobCodec
	}
	return BlobCodec_BLOB_CODEC_OPT
}

type Int struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntSize IntSize `protobuf:"varint,1,opt,name=int_size,json=intSize,proto3,enum=protokit.IntSize" json:"int_size,omitempty"` // int 的大小
}

func (x *Int) Reset() {
	*x = Int{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int) ProtoMessage() {}

func (x *Int) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int.ProtoReflect.Descriptor instead.
func (*Int) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{10}
}

func (x *Int) GetIntSize() IntSize {
	if x != nil {
		return x.IntSize
	}
	return IntSize_INT_SIZE_INT
}

// Decimal 数字
type Decimal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Precision int32 `protobuf:"varint,1,opt,name=precision,proto3" json:"precision,omitempty"` // The number of digits on both sides of the decimal point.
	Scale     int32 `protobuf:"varint,2,opt,name=scale,proto3" json:"scale,omitempty"`         // The number of digits to the right of the decimal point.
}

func (x *Decimal) Reset() {
	*x = Decimal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Decimal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decimal) ProtoMessage() {}

func (x *Decimal) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decimal.ProtoReflect.Descriptor instead.
func (*Decimal) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{11}
}

func (x *Decimal) GetPrecision() int32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *Decimal) GetScale() int32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

// Index 索引配置
type Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Generate the default index.
	Default bool `protobuf:"varint,1,opt,name=default,proto3" json:"default,omitempty"`
	// Set the index group.
	Group string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	// Set the index group order.
	Order string `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *Index) Reset() {
	*x = Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{12}
}

func (x *Index) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *Index) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Index) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

// Hint 配置
type Hint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default bool  `protobuf:"varint,1,opt,name=default,proto3" json:"default,omitempty"` // 使用默认方式
	Manual  int32 `protobuf:"varint,2,opt,name=manual,proto3" json:"manual,omitempty"`   // 指定值
}

func (x *Hint) Reset() {
	*x = Hint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protokit_orm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hint) ProtoMessage() {}

func (x *Hint) ProtoReflect() protoreflect.Message {
	mi := &file_protokit_orm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hint.ProtoReflect.Descriptor instead.
func (*Hint) Descriptor() ([]byte, []int) {
	return file_protokit_orm_proto_rawDescGZIP(), []int{13}
}

func (x *Hint) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *Hint) GetManual() int32 {
	if x != nil {
		return x.Manual
	}
	return 0
}

var file_protokit_orm_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*OrmMessageOptions)(nil),
		Field:         56801,
		Name:          "protokit.orm_message",
		Tag:           "bytes,56801,opt,name=orm_message",
		Filename:      "protokit/orm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*OrmFieldOptions)(nil),
		Field:         56802,
		Name:          "protokit.orm_field",
		Tag:           "bytes,56802,opt,name=orm_field",
		Filename:      "protokit/orm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*OrmEnumOptions)(nil),
		Field:         56803,
		Name:          "protokit.orm_enum",
		Tag:           "bytes,56803,opt,name=orm_enum",
		Filename:      "protokit/orm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*EnumValueOptions)(nil),
		Field:         56804,
		Name:          "protokit.enum_value",
		Tag:           "bytes,56804,opt,name=enum_value",
		Filename:      "protokit/orm.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional protokit.OrmMessageOptions orm_message = 56801;
	E_OrmMessage = &file_protokit_orm_proto_extTypes[0]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional protokit.OrmFieldOptions orm_field = 56802;
	E_OrmField = &file_protokit_orm_proto_extTypes[1]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional protokit.OrmEnumOptions orm_enum = 56803;
	E_OrmEnum = &file_protokit_orm_proto_extTypes[2]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional protokit.EnumValueOptions enum_value = 56804;
	E_EnumValue = &file_protokit_orm_proto_extTypes[3]
)

var File_protokit_orm_proto protoreflect.FileDescriptor

var file_protokit_orm_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2f, 0x6f, 0x72, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x10, 0x0a, 0x0e, 0x4f, 0x72, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x39, 0x0a, 0x10, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8e, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x6f, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e,
	0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x22, 0xd7,
	0x02, 0x0a, 0x11, 0x4f, 0x72, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f,
	0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x65, 0x61, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74,
	0x2e, 0x42, 0x65, 0x61, 0x6e, 0x52, 0x04, 0x62, 0x65, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x68,
	0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x15,
	0x0a, 0x06, 0x6e, 0x6f, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x6e, 0x6f, 0x4c, 0x6f, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x74,
	0x65, 0x72, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x22, 0x91, 0x08, 0x0a, 0x0f, 0x4f, 0x72, 0x6d,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x04,
	0x62, 0x6c, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62,
	0x12, 0x26, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x09, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x09, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69,
	0x74, 0x2e, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x05,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f,
	0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e,
	0x49, 0x6e, 0x74, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x07, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x6f, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x53, 0x79, 0x6e, 0x63,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x64, 0x62, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x6f, 0x53, 0x79,
	0x6e, 0x63, 0x44, 0x62, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x26, 0x0a,
	0x0f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72,
	0x6f, 0x6f, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x67, 0x6f, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x47, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x67, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x15,
	0x0a, 0x06, 0x6e, 0x6f, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x6e, 0x6f, 0x4c, 0x6f, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x74,
	0x65, 0x72, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x72,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x68, 0x61, 0x72, 0x22, 0x53, 0x0a, 0x04,
	0x42, 0x65, 0x61, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x39, 0x0a, 0x0f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x47, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x22, 0x64, 0x0a, 0x06, 0x47, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x39, 0x0a, 0x19, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x57, 0x68, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x6b, 0x0a, 0x04, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x2f,
	0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x42, 0x6c, 0x6f,
	0x62, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x32, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x42,
	0x6c, 0x6f, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x43, 0x6f,
	0x64, 0x65, 0x63, 0x22, 0x33, 0x0a, 0x03, 0x49, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x52,
	0x07, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x3d, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x04, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x6e, 0x75,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x2a, 0x5c, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x0e,
	0x42, 0x4c, 0x4f, 0x42, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4c, 0x4f, 0x42, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4c, 0x4f,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x4c, 0x4f, 0x42, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4c,
	0x4f, 0x42, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x54, 0x49, 0x4e, 0x59, 0x10, 0x03, 0x2a, 0x68,
	0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x0e, 0x42,
	0x4c, 0x4f, 0x42, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x43, 0x5f, 0x4f, 0x50, 0x54, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x42, 0x4c, 0x4f, 0x42, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x43, 0x5f, 0x47, 0x4f,
	0x42, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x4c, 0x4f, 0x42, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x43, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16,
	0x42, 0x4c, 0x4f, 0x42, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x43, 0x5f, 0x4e, 0x41, 0x54, 0x49, 0x56,
	0x45, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x03, 0x2a, 0x70, 0x0a, 0x08, 0x54, 0x65, 0x78, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x45, 0x58, 0x54,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x54, 0x45, 0x58, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4d, 0x45,
	0x44, 0x49, 0x55, 0x4d, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x53,
	0x49, 0x5a, 0x45, 0x5f, 0x54, 0x49, 0x4e, 0x59, 0x10, 0x04, 0x2a, 0x69, 0x0a, 0x07, 0x49, 0x6e,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x5a,
	0x45, 0x5f, 0x49, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x54, 0x5f, 0x53,
	0x49, 0x5a, 0x45, 0x5f, 0x42, 0x49, 0x47, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x54,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x54,
	0x49, 0x4e, 0x59, 0x10, 0x04, 0x2a, 0x45, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53,
	0x5f, 0x47, 0x5a, 0x49, 0x50, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4d, 0x50, 0x52,
	0x45, 0x53, 0x53, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x50, 0x59, 0x10, 0x02, 0x3a, 0x5f, 0x0a, 0x0b,
	0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe1, 0xbb, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e,
	0x4f, 0x72, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0a, 0x6f, 0x72, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x57, 0x0a,
	0x09, 0x6f, 0x72, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe2, 0xbb, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e, 0x4f, 0x72, 0x6d,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x6f, 0x72,
	0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x3a, 0x53, 0x0a, 0x08, 0x6f, 0x72, 0x6d, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xe3, 0xbb, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x2e, 0x4f, 0x72, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x07, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x3a, 0x5e, 0x0a, 0x0a, 0x65,
	0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe4, 0xbb, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x4b, 0x5a, 0x3a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x69,
	0x63, 0x68, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0xaa, 0x02, 0x0c, 0x67, 0x65, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protokit_orm_proto_rawDescOnce sync.Once
	file_protokit_orm_proto_rawDescData = file_protokit_orm_proto_rawDesc
)

func file_protokit_orm_proto_rawDescGZIP() []byte {
	file_protokit_orm_proto_rawDescOnce.Do(func() {
		file_protokit_orm_proto_rawDescData = protoimpl.X.CompressGZIP(file_protokit_orm_proto_rawDescData)
	})
	return file_protokit_orm_proto_rawDescData
}

var file_protokit_orm_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_protokit_orm_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_protokit_orm_proto_goTypes = []interface{}{
	(BlobSize)(0),                         // 0: protokit.BlobSize
	(BlobCodec)(0),                        // 1: protokit.BlobCodec
	(TextSize)(0),                         // 2: protokit.TextSize
	(IntSize)(0),                          // 3: protokit.IntSize
	(Compress)(0),                         // 4: protokit.Compress
	(*OrmEnumOptions)(nil),                // 5: protokit.OrmEnumOptions
	(*EnumValueOptions)(nil),              // 6: protokit.EnumValueOptions
	(*Error)(nil),                         // 7: protokit.Error
	(*OrmMessageOptions)(nil),             // 8: protokit.OrmMessageOptions
	(*OrmFieldOptions)(nil),               // 9: protokit.OrmFieldOptions
	(*Bean)(nil),                          // 10: protokit.Bean
	(*GoType)(nil),                        // 11: protokit.GoType
	(*Lock)(nil),                          // 12: protokit.Lock
	(*Sequence)(nil),                      // 13: protokit.Sequence
	(*Blob)(nil),                          // 14: protokit.Blob
	(*Int)(nil),                           // 15: protokit.Int
	(*Decimal)(nil),                       // 16: protokit.Decimal
	(*Index)(nil),                         // 17: protokit.Index
	(*Hint)(nil),                          // 18: protokit.Hint
	(*descriptorpb.MessageOptions)(nil),   // 19: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),     // 20: google.protobuf.FieldOptions
	(*descriptorpb.EnumOptions)(nil),      // 21: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 22: google.protobuf.EnumValueOptions
}
var file_protokit_orm_proto_depIdxs = []int32{
	7,  // 0: protokit.EnumValueOptions.error:type_name -> protokit.Error
	10, // 1: protokit.OrmMessageOptions.bean:type_name -> protokit.Bean
	18, // 2: protokit.OrmMessageOptions.hint:type_name -> protokit.Hint
	12, // 3: protokit.OrmMessageOptions.lock:type_name -> protokit.Lock
	14, // 4: protokit.OrmFieldOptions.blob:type_name -> protokit.Blob
	2,  // 5: protokit.OrmFieldOptions.text:type_name -> protokit.TextSize
	17, // 6: protokit.OrmFieldOptions.unique:type_name -> protokit.Index
	17, // 7: protokit.OrmFieldOptions.index:type_name -> protokit.Index
	17, // 8: protokit.OrmFieldOptions.aggregate:type_name -> protokit.Index
	18, // 9: protokit.OrmFieldOptions.hint:type_name -> protokit.Hint
	18, // 10: protokit.OrmFieldOptions.shard:type_name -> protokit.Hint
	15, // 11: protokit.OrmFieldOptions.int:type_name -> protokit.Int
	16, // 12: protokit.OrmFieldOptions.decimal:type_name -> protokit.Decimal
	4,  // 13: protokit.OrmFieldOptions.compress:type_name -> protokit.Compress
	13, // 14: protokit.OrmFieldOptions.sequence:type_name -> protokit.Sequence
	11, // 15: protokit.OrmFieldOptions.go_type:type_name -> protokit.GoType
	11, // 16: protokit.Bean.dynamic_generic:type_name -> protokit.GoType
	0,  // 17: protokit.Blob.blob_size:type_name -> protokit.BlobSize
	1,  // 18: protokit.Blob.blob_codec:type_name -> protokit.BlobCodec
	3,  // 19: protokit.Int.int_size:type_name -> protokit.IntSize
	19, // 20: protokit.orm_message:extendee -> google.protobuf.MessageOptions
	20, // 21: protokit.orm_field:extendee -> google.protobuf.FieldOptions
	21, // 22: protokit.orm_enum:extendee -> google.protobuf.EnumOptions
	22, // 23: protokit.enum_value:extendee -> google.protobuf.EnumValueOptions
	8,  // 24: protokit.orm_message:type_name -> protokit.OrmMessageOptions
	9,  // 25: protokit.orm_field:type_name -> protokit.OrmFieldOptions
	5,  // 26: protokit.orm_enum:type_name -> protokit.OrmEnumOptions
	6,  // 27: protokit.enum_value:type_name -> protokit.EnumValueOptions
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	24, // [24:28] is the sub-list for extension type_name
	20, // [20:24] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_protokit_orm_proto_init() }
func file_protokit_orm_proto_init() {
	if File_protokit_orm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protokit_orm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrmEnumOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumValueOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrmMessageOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrmFieldOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Decimal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protokit_orm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protokit_orm_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   14,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_protokit_orm_proto_goTypes,
		DependencyIndexes: file_protokit_orm_proto_depIdxs,
		EnumInfos:         file_protokit_orm_proto_enumTypes,
		MessageInfos:      file_protokit_orm_proto_msgTypes,
		ExtensionInfos:    file_protokit_orm_proto_extTypes,
	}.Build()
	File_protokit_orm_proto = out.File
	file_protokit_orm_proto_rawDesc = nil
	file_protokit_orm_proto_goTypes = nil
	file_protokit_orm_proto_depIdxs = nil
}
